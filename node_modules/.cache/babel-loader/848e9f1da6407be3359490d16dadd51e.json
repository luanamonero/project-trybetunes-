{"ast":null,"code":"var _jsxFileName = \"/home/luana/trybeTunes/sd-014-b-project-trybetunes/src/component/musicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = music => {\n      const {\n        checked\n      } = this.state;\n      console.log('oi');\n\n      if (checked === false) {\n        // se não tiver check, add a música\n        this.setState({\n          loading: true\n        });\n        addSong(music).then(() => this.setState({\n          loading: false,\n          checked: true\n        }));\n      }\n    };\n\n    this.state = {\n      loading: false,\n      checked: false\n    };\n  } // Consultado do repositório: do Wellington Fonseca\n  // https://github.com/tryber/sd-014-b-project-trybetunes/pull/53\n\n\n  render() {\n    const {\n      musics: {\n        trackName,\n        previewUrl,\n        trackId\n      }\n    } = this.props;\n    const {\n      loading,\n      checked\n    } = this.state;\n\n    const loadingElement = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 28\n    }, this);\n\n    const musics = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        \"data-testid\": \"audio-component\",\n        src: previewUrl,\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), \"O seu navegador n\\xE3o suporta o elemento\", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"id\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"id\",\n          \"data-testid\": `checkbox-music-${trackId}`,\n          checked: checked,\n          onChange: this.handleChange(thi) // ao marcar, chama a função handlechange, passando o objeto recebido pela api desconstruida como paramêtro\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !loading ? musics : loadingElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  musics: PropTypes.shape({\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    trackId: PropTypes.number\n  }).isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/luana/trybeTunes/sd-014-b-project-trybetunes/src/component/musicCard.js"],"names":["React","PropTypes","addSong","Loading","MusicCard","Component","constructor","handleChange","music","checked","state","console","log","setState","loading","then","render","musics","trackName","previewUrl","trackId","props","loadingElement","thi","propTypes","shape","string","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAUdC,YAVc,GAUEC,KAAD,IAAW;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKC,KAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,UAAIH,OAAO,KAAK,KAAhB,EAAuB;AAAE;AACvB,aAAKI,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAE;AADG,SAAd;AAGAZ,QAAAA,OAAO,CAACM,KAAD,CAAP,CACGO,IADH,CACQ,MAAM,KAAKF,QAAL,CAAc;AACxBC,UAAAA,OAAO,EAAE,KADe;AAExBL,UAAAA,OAAO,EAAE;AAFe,SAAd,CADd;AAKD;AACF,KAvBa;;AAEZ,SAAKC,KAAL,GAAa;AACXI,MAAAA,OAAO,EAAE,KADE;AAEXL,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID,GAPqC,CAStC;AACA;;;AAgBAO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,UAAb;AAAyBC,QAAAA;AAAzB;AAAV,QAAiD,KAAKC,KAA5D;AACA,UAAM;AAAEP,MAAAA,OAAF;AAAWL,MAAAA;AAAX,QAAuB,KAAKC,KAAlC;;AACA,UAAMY,cAAc,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAvB;;AACA,UAAML,MAAM,gBACV;AAAA,8BACE;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,uBAAY,iBAAnB;AAAqC,QAAA,GAAG,EAAGC,UAA3C;AAAwD,QAAA,QAAQ,MAAhE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,4DAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAO,QAAA,OAAO,EAAC,IAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAC,IAFL;AAGE,yBAAe,kBAAiBC,OAAQ,EAH1C;AAIE,UAAA,OAAO,EAAGX,OAJZ;AAKE,UAAA,QAAQ,EAAG,KAAKF,YAAL,CAAkBgB,GAAlB,CALb,CAKsC;;AALtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,oBADF;;AAmBA,wBACE;AAAA,gBACG,CAACT,OAAD,GAAWG,MAAX,GAAoBK;AADvB;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAtDqC;;AAyDxClB,SAAS,CAACoB,SAAV,GAAsB;AACpBP,EAAAA,MAAM,EAAEhB,SAAS,CAACwB,KAAV,CAAgB;AACtBP,IAAAA,SAAS,EAAEjB,SAAS,CAACyB,MADC;AAEtBP,IAAAA,UAAU,EAAElB,SAAS,CAACyB,MAFA;AAGtBN,IAAAA,OAAO,EAAEnB,SAAS,CAAC0B;AAHG,GAAhB,EAILC;AALiB,CAAtB;AAQA,eAAexB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      checked: false,\n    };\n  }\n\n  // Consultado do repositório: do Wellington Fonseca\n  // https://github.com/tryber/sd-014-b-project-trybetunes/pull/53\n  handleChange = (music) => {\n    const { checked } = this.state;\n    console.log('oi');\n    if (checked === false) { // se não tiver check, add a música\n      this.setState({\n        loading: true,\n      });\n      addSong(music)\n        .then(() => this.setState({\n          loading: false,\n          checked: true,\n        }));\n    }\n  }\n\n  render() {\n    const { musics: { trackName, previewUrl, trackId } } = this.props;\n    const { loading, checked } = this.state;\n    const loadingElement = <Loading />;\n    const musics = (\n      <>\n        <h5>{trackName}</h5>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          O seu navegador não suporta o elemento\n          <code>audio</code>\n        </audio>\n        <label htmlFor=\"id\">\n          <input\n            type=\"checkbox\"\n            id=\"id\"\n            data-testid={ `checkbox-music-${trackId}` }\n            checked={ checked }\n            onChange={ this.handleChange(thi) } // ao marcar, chama a função handlechange, passando o objeto recebido pela api desconstruida como paramêtro\n          />\n        </label>\n      </>\n    );\n    return (\n      <div>\n        {!loading ? musics : loadingElement}\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  musics: PropTypes.shape({\n    trackName: PropTypes.string,\n    previewUrl: PropTypes.string,\n    trackId: PropTypes.number,\n  }).isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}