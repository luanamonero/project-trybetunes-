{"ast":null,"code":"var _jsxFileName = \"/home/luana/trybeTunes/sd-014-b-project-trybetunes/src/pages/Album.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../component/Header';\nimport MusicCard from '../component/musicCard';\nimport Loading from '../component/Loading';\nimport musicsAPI from '../services/musicsAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.getMusics = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      this.state({\n        loading: true\n      });\n      const musics = await musicsAPI(id);\n      this.setState({\n        loading: false,\n        musics: musics.slice(1),\n        artist: musics[0].artistName,\n        album: musics[0].collectionName\n      });\n    };\n\n    this.state = {\n      loading: false,\n      artist: '',\n      album: '',\n      musics: []\n    };\n  }\n\n  componentDidMount() {\n    this.getMusics();\n  }\n\n  render() {\n    const {\n      musics,\n      album,\n      artist\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/search\",\n          \"data-testid\": \"link-to-search\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"artist-name\",\n          children: artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"album-name\",\n          children: album\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), musics.map(element => /*#__PURE__*/_jsxDEV(MusicCard, {\n          music: element\n        }, element.trackId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 38\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/luana/trybeTunes/sd-014-b-project-trybetunes/src/pages/Album.js"],"names":["React","Link","Header","MusicCard","Loading","musicsAPI","Album","Component","constructor","getMusics","match","params","id","props","state","loading","musics","setState","slice","artist","artistName","album","collectionName","componentDidMount","render","map","element","trackId","propTypes","PropTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;;AAEA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAedC,SAfc,GAeF,YAAY;AACtB,YAAM;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAEC,YAAAA;AAAF;AAAV;AAAT,UAAgC,KAAKC,KAA3C;AACA,WAAKC,KAAL,CAAW;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAX;AACA,YAAMC,MAAM,GAAG,MAAMX,SAAS,CAACO,EAAD,CAA9B;AACA,WAAKK,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA,MAAM,EAAEA,MAAM,CAACE,KAAP,CAAa,CAAb,CAFI;AAGZC,QAAAA,MAAM,EAAEH,MAAM,CAAC,CAAD,CAAN,CAAUI,UAHN;AAIZC,QAAAA,KAAK,EAAEL,MAAM,CAAC,CAAD,CAAN,CAAUM;AAJL,OAAd;AAKD,KAxBa;;AAEZ,SAAKR,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXI,MAAAA,MAAM,EAAE,EAFG;AAGXE,MAAAA,KAAK,EAAE,EAHI;AAIXL,MAAAA,MAAM,EAAE;AAJG,KAAb;AAOD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,SAAL;AACD;;AAaDe,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,MAAF;AAAUK,MAAAA,KAAV;AAAiBF,MAAAA;AAAjB,QAA4B,KAAKL,KAAvC;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAmB,yBAAY,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,yBAAY,aAAhB;AAAA,oBAA+BK;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAI,yBAAY,YAAhB;AAAA,oBAA8BE;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIIL,MAAM,CAACS,GAAP,CAAYC,OAAD,iBAAc,QAAC,SAAD;AAEzB,UAAA,KAAK,EAAGA;AAFiB,WACnBA,OAAO,CAACC,OADW;AAAA;AAAA;AAAA;AAAA,gBAAzB,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA3CiC;;AA8CpCrB,KAAK,CAACsB,SAAN,GAAkB;AAChBlB,EAAAA,KAAK,EAAEmB,SAAS,CAACC,KAAV,CAAgB;AACrBnB,IAAAA,MAAM,EAAEkB,SAAS,CAACC,KAAV,CAAgB;AACtBlB,MAAAA,EAAE,EAAEiB,SAAS,CAACE;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALa,CAAlB;AASA,eAAe1B,KAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../component/Header';\nimport MusicCard from '../component/musicCard';\nimport Loading from '../component/Loading';\nimport musicsAPI from '../services/musicsAPI';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      artist: '',\n      album: '',\n      musics: [],\n\n    };\n  }\n\n  componentDidMount() {\n    this.getMusics();\n  }\n\n  getMusics = async () => {\n    const { match: { params: { id } } } = this.props;\n    this.state({ loading: true });\n    const musics = await musicsAPI(id);\n    this.setState({\n      loading: false,\n      musics: musics.slice(1),\n      artist: musics[0].artistName,\n      album: musics[0].collectionName });\n  }\n\n  render() {\n    const { musics, album, artist } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <div>\n          <Link to=\"/search\" data-testid=\"link-to-search\">Home</Link>\n          <h2 data-testid=\"artist-name\">{artist}</h2>\n          <h3 data-testid=\"album-name\">{album}</h3>\n          { musics.map((element) => (<MusicCard\n            key={ element.trackId }\n            music={ element }\n          />))}\n        </div>\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}